<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SisoDb</name>
    </assembly>
    <members>
        <member name="T:SisoDb.ISession">
            <summary>
            A short lived sessioni used to interact with the database.
            </summary>
        </member>
        <member name="M:SisoDb.ISession.GetStructureSchema``1">
            <summary>
            Lets you get a hold of the schema associated with a certain structure.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SisoDb.ISession.Exists``1(System.Object)">
            <summary>
            Returns value indicating of structure exists or not.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SisoDb.ISession.GetById``1(System.Object)">
            <summary>
            Returns one single structure identified
            by an id.
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <param name="id"></param>
            <returns>Structure (<typeparamref name="T"/>) or Null</returns>
        </member>
        <member name="M:SisoDb.ISession.GetByIdAs``2(System.Object)">
            <summary>
            Returns one single structure identified
            by an id. 
            </summary>
            <typeparam name="TContract">
            Structure type, used as a contract defining the scheme.</typeparam>
            <typeparam name="TOut">
            Determines the type you want your structure deserialized to and returned as.</typeparam>
            <param name="id"></param>
            <returns>Structure (<typeparamref name="TOut"/>) or null.</returns>
        </member>
        <member name="M:SisoDb.ISession.GetByIdAsJson``1(System.Object)">
            <summary>
            Returns one single structure identified
            by an id, as Json. This is the most
            effective return type, since the Json
            is stored in the database, no deserialization
            will take place.  
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <param name="id"></param>
            <returns>Json representation of (<typeparamref name="T"/>) or Null</returns>
        </member>
        <member name="M:SisoDb.ISession.GetByIds``1(System.Object[])">
            <summary>
            Returns all structures for the defined structure <typeparamref name="T"/>
            matching passed ids.
            </summary>
            <typeparam name="T">Structure type, used as a contract defining the scheme.</typeparam>
            <param name="ids">Ids used for matching the structures to return.</param>
            <returns>IEnumerable of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:SisoDb.ISession.GetByIdsAs``2(System.Object[])">
            <summary>
            Returns all structures for the defined structure <typeparamref name="TContract"/>
            matching passed ids.
            </summary>
            <typeparam name="TContract">
            Structure type, used as a contract defining the scheme.</typeparam>
            <typeparam name="TOut">
            Determines the type you want your structure deserialized to and returned as.</typeparam>
            <param name="ids">Ids used for matching the structures to return.</param>
            <returns>IEnumerable of <typeparamref name="TOut"/>.</returns>
        </member>
        <member name="M:SisoDb.ISession.GetByIdsAsJson``1(System.Object[])">
            <summary>
            Returns Json representation for all structures for the defined structure <typeparamref name="T"/>
            matching passed ids.
            </summary>
            <typeparam name="T">Structure type, used as a contract defining the scheme.</typeparam>
            <param name="ids">Ids used for matching the structures to return.</param>
            <returns>IEnumerable Json representation of <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:SisoDb.ISession.Query``1">
            <summary>
            Lets you perform a Query defining things like
            <see cref="M:SisoDb.ISisoQueryable`1.Take(System.Int32)"/>
            <see cref="M:SisoDb.ISisoQueryable`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}}[])"/>
            <see cref="M:SisoDb.ISisoQueryable`1.Include``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])"/>
            <see cref="M:SisoDb.ISisoQueryable`1.OrderBy(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])"/>
            </summary>
            <typeparam name="T">Structure type, used as a contract defining the scheme.</typeparam>
            <returns></returns>
            <remarks>The query is defered and is executed when you start yield the result.</remarks>
        </member>
        <member name="M:SisoDb.ISession.Insert``1(``0)">
            <summary>
            Inserts a single structure using the <typeparamref name="T"/> as
            the contract for the structure being inserted.
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <param name="item"></param>
        </member>
        <member name="M:SisoDb.ISession.InsertAs``1(System.Object)">
            <summary>
            Inserts a single structure using the <typeparamref name="T"/> as
            the contract for the structure being inserted. As item, you can pass
            any type that has partial or full match of the contract, without extending it.
            E.g An anonymous type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item"></param>
        </member>
        <member name="M:SisoDb.ISession.InsertJson``1(System.String)">
            <summary>
            Inserts Json strcutures using the <typeparamref name="T"/> as
            the contract for the structure being inserted.
            </summary>
            <remarks>Deserialization of the Json structure will take place, 
            so If you do have the instace pass that instead using other overload!</remarks>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
        </member>
        <member name="M:SisoDb.ISession.InsertMany``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Inserts multiple structures using the <typeparamref name="T"/> as
            the contract for the structures being inserted. 
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <param name="items"></param>
        </member>
        <member name="M:SisoDb.ISession.InsertManyJson``1(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Inserts multiple Json strcutures using the <typeparamref name="T"/> as
            the contract for the structures being inserted.
            </summary>
            <remarks>Deserialization of the Json structures will take place, 
            so If you do have the instace pass that instead using other overload!</remarks>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
        </member>
        <member name="M:SisoDb.ISession.Update``1(``0)">
            <summary>
            Updates the sent structure. If it
            does not exist, an <see cref="T:SisoDb.SisoDbException"/> will be
            thrown.
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <param name="item"></param>
        </member>
        <member name="M:SisoDb.ISession.Update``1(System.Object,System.Action{``0},System.Func{``0,System.Boolean})">
            <summary>
            Uses sent id to locate a structure and then calls sent <paramref name="modifier"/>
            to apply the changes. Will also place an rowlock, which makes it highly
            useful in a concurrent environment like in an event denormalizer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id"></param>
            <param name="modifier"></param>
            <param name="proceed">True to continue with update;False to abort</param>
        </member>
        <member name="M:SisoDb.ISession.DeleteById``1(System.Object)">
            <summary>
            Deletes structure by id.
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <param name="id"></param>
        </member>
        <member name="M:SisoDb.ISession.DeleteByIds``1(System.Object[])">
            <summary>
            Deletes all structures for the defined structure <typeparamref name="T"/>
            matching passed ids.
            </summary>
            <typeparam name="T">Structure type, used as a contract defining the scheme.</typeparam>
            <param name="ids">Ids used for matching the structures to delete.</param>
        </member>
        <member name="P:SisoDb.ISession.QueryEngine">
            <summary>
            Low level API that executes queries as <see cref="T:SisoDb.IQuery"/>.
            </summary>
        </member>
        <member name="P:SisoDb.ISession.Advanced">
            <summary>
            Advances querying options.
            </summary>
        </member>
        <member name="M:SisoDb.IQueryEngine.Count``1(SisoDb.IQuery)">
            <summary>
            Issues a simple count for how many structures there are
            in the specified structure type <typeparamref name="T"/>,
            matching the where expression in <see cref="P:SisoDb.IQuery.Where"/>.
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <param name="query"></param>
            <returns>Number of structures.</returns>
        </member>
        <member name="M:SisoDb.IQueryEngine.Query``1(SisoDb.IQuery)">
            <summary>
            Lets you perform a Query by passing an <see cref="T:SisoDb.IQuery"/>.
            </summary>
            <typeparam name="T">Structure type, used as a contract defining the scheme.</typeparam>
            <returns>IEnumerable of <typeparamref name="T"/>.</returns>
            <remarks>The query is defered and is executed when you start yield the result.</remarks>
        </member>
        <member name="M:SisoDb.IQueryEngine.QueryAs``2(SisoDb.IQuery)">
            <summary>
            Lets you perform a Query by passing an <see cref="T:SisoDb.IQuery"/>.
            Returns structures for the defined structure <typeparamref name="T"/>
            deserialized as <typeparamref name="TResult"/>. 
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <typeparam name="TResult">
            Determines the type you want your structure deserialized to and returned as.</typeparam>
            <param name="query"></param>
            <returns>IEnumerable of <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="M:SisoDb.IQueryEngine.QueryAsAnonymous``2(SisoDb.IQuery,``1)">
            <summary>
            Lets you perform a Query by passing an <see cref="T:SisoDb.IQuery"/>.
            Returns structures for the defined structure <typeparamref name="T"/>
            deserialized as <typeparamref name="TResult"/> defined by the template. 
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <typeparam name="TResult">
            Determines the type you want your structure deserialized to and returned as.</typeparam>
            <param name="query"></param>
            <param name="template"> </param>
            <returns>IEnumerable of <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="M:SisoDb.IQueryEngine.QueryAsJson``1(SisoDb.IQuery)">
            <summary>
            Lets you perform a Query by passing an <see cref="T:SisoDb.IQuery"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <returns>IEnumerable Json representation of <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:SisoDb.IAdvanced">
            <summary>
            Used to execute some more advances query operations against the database.
            </summary>
        </member>
        <member name="M:SisoDb.IAdvanced.DeleteByQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Deletes one or more structures matchings the sent
            expression.
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <param name="expression"></param>
        </member>
        <member name="M:SisoDb.IAdvanced.NamedQuery``1(SisoDb.INamedQuery)">
            <summary>
            Lets you invoke stored procedures that returns Json,
            which will get deserialized to <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <param name="query"></param>
            <returns>Empty or populated IEnumerable of <typeparamref name="T"/>.</returns>
            <remarks>Does not consume the cache provider.</remarks>
        </member>
        <member name="M:SisoDb.IAdvanced.NamedQueryAs``2(SisoDb.INamedQuery)">
            <summary>
            Lets you invoke stored procedures that returns Json,
            which will get deserialized to <typeparamref name="TOut"/>.
            </summary>
            <typeparam name="TContract">
            Structure type, used as a contract defining the scheme.</typeparam>
            <typeparam name="TOut">
            Determines the type you want your structure deserialized to and returned as.</typeparam>
            <param name="query"></param>
            <returns>Empty or populated IEnumerable of <typeparamref name="TOut"/>.</returns>
            <remarks>Does not consume the cache provider.</remarks>
        </member>
        <member name="M:SisoDb.IAdvanced.NamedQueryAsJson``1(SisoDb.INamedQuery)">
            <summary>
            Lets you invoke stored procedures that returns Json.
            This is the most effective return type, since the Json is stored in the database,
            no deserialization will take place. 
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <param name="query"></param>
            <returns>Json representation of structures (<typeparamref name="T"/>)
            or empty IEnumerable of <see cref="T:System.String"/>.</returns>
            <remarks>Does not consume the cache provider.</remarks>
        </member>
        <member name="M:SisoDb.IAdvanced.RawQuery``1(SisoDb.IRawQuery)">
            <summary>
            Lets you invoke raw query, e.g using SQL, that returns Json,
            which will get deserialized to <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <param name="query"></param>
            <returns>Empty or populated IEnumerable of <typeparamref name="T"/>.</returns>
            <remarks>Does not consume the cache provider.</remarks>
        </member>
        <member name="M:SisoDb.IAdvanced.RawQueryAs``2(SisoDb.IRawQuery)">
            <summary>
            Lets you invoke raw query, e.g using SQL, that returns Json,
            which will get deserialized to <typeparamref name="TOut"/>.
            </summary>
            <typeparam name="TContract">
            Structure type, used as a contract defining the scheme.</typeparam>
            <typeparam name="TOut">
            Determines the type you want your structure deserialized to and returned as.</typeparam>
            <param name="query"></param>
            <returns>Empty or populated IEnumerable of <typeparamref name="TOut"/>.</returns>
            <remarks>Does not consume the cache provider.</remarks>
        </member>
        <member name="M:SisoDb.IAdvanced.RawQueryAsJson``1(SisoDb.IRawQuery)">
            <summary>
            Lets you invoke a raw query, e.g using SQL, that returns Json.
            This is the most effective return type, since the Json is stored in the database,
            no deserialization will take place. 
            </summary>
            <typeparam name="T">
            Structure type, used as a contract defining the scheme.</typeparam>
            <param name="query"></param>
            <returns>Json representation of structures (<typeparamref name="T"/>)
            or empty IEnumerable of <see cref="T:System.String"/>.</returns>
            <remarks>Does not consume the cache provider.</remarks>
        </member>
        <member name="M:SisoDb.IAdvanced.UpdateMany``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Action{``0})">
            <summary>
            Traverses every structure in the set and lets you apply changes to each yielded structure.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression"></param>
            <param name="modifier"></param>
            <remarks>Does not support Concurrency tokens</remarks>
        </member>
        <member name="F:SisoDb.StructureSetMigratorStatuses.Keep">
            <summary>
            Indicates that you want to keep the structure
            and the new-structure will be persisted with
            the same id as the old.
            </summary>
        </member>
        <member name="F:SisoDb.StructureSetMigratorStatuses.Trash">
            <summary>
            Indicates that your are no longer interested
            in keeping the structure, hence it will be
            deleted.
            </summary>
        </member>
        <member name="F:SisoDb.StructureSetMigratorStatuses.Abort">
            <summary>
            Abort and rollback the process.
            </summary>
        </member>
        <member name="T:SisoDb.IStructureSetMigrator">
            <summary>
            Used to update and assist you with migrating a complete structure set.
            </summary>
        </member>
        <member name="T:SisoDb.ISisoDbDatabase">
            <summary>
            Represents a database targetting a plain database and not e.g
            an in-memory database.
            </summary>
        </member>
        <member name="T:SisoDb.ISisoDatabase">
            <summary>
            Represents a database. An instance of
            a database is designed for being long lived, since
            it contains cache for structure schemas etc.
            </summary>
        </member>
        <member name="M:SisoDb.ISisoDatabase.GetStructureSetMigrator">
            <summary>
            Returns an <see cref="T:SisoDb.IStructureSetMigrator"/> used for
            assisting you with model migrations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SisoDb.ISisoDatabase.EnsureNewDatabase">
            <summary>
            Ensures that a new fresh database will exists. Drops any existing database.
            </summary>
        </member>
        <member name="M:SisoDb.ISisoDatabase.CreateIfNotExists">
            <summary>
            Creates and initializes a new database if one does not exist.
            </summary>
        </member>
        <member name="M:SisoDb.ISisoDatabase.InitializeExisting">
            <summary>
            Initializes an existing database by creating Siso-system tables. 
            </summary>
        </member>
        <member name="M:SisoDb.ISisoDatabase.DeleteIfExists">
            <summary>
            Deletes the databse if it exists.
            </summary>
        </member>
        <member name="M:SisoDb.ISisoDatabase.Exists">
            <summary>
            Checks if the database exists.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SisoDb.ISisoDatabase.DropStructureSet``1">
            <summary>
            Drops the structure set, meaning all tables associated with
            the structure type.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SisoDb.ISisoDatabase.DropStructureSet(System.Type)">
            <summary>
            Drops the structure set, meaning all tables associated with
            the structure type.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:SisoDb.ISisoDatabase.DropStructureSets(System.Type[])">
            <summary>
            Drops ALL structure sets.
            </summary>
            <param name="types"></param>
        </member>
        <member name="M:SisoDb.ISisoDatabase.UpsertStructureSet``1">
            <summary>
            Manually upserts a structure set, meaning all tables for
            the structure type will be created.
            </summary>
            <remarks>
            This is normally something you do not need to do.
            This is done automatically.</remarks>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SisoDb.ISisoDatabase.UpsertStructureSet(System.Type)">
            <summary>
            Manually upserts a structure set, meaning all tables for
            the structure type will be created.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:SisoDb.ISisoDatabase.BeginSession">
            <summary>
            Creates a NON Transactional <see cref="T:SisoDb.ISession"/>, used for searching.
            The Session is designed for being short lived. Create, consume and dispose.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SisoDb.ISisoDatabase.UseOnceTo">
            <summary>
            Use when you want to execute a single search operation against the <see cref="T:SisoDb.ISisoDatabase"/>
            via an <see cref="T:SisoDb.ISession"/>.
            </summary>
            <returns></returns>
            <remarks>If you need to do multiple queries, inserts etc, then use <see cref="M:SisoDb.ISisoDatabase.BeginSession"/> instead.</remarks>
        </member>
        <member name="P:SisoDb.ISisoDatabase.Name">
            <summary>
            The name of the database.
            </summary>
        </member>
        <member name="P:SisoDb.ISisoDatabase.ConnectionInfo">
            <summary>
            Connection info for the database.
            </summary>
        </member>
        <member name="P:SisoDb.ISisoDatabase.CacheProvider">
            <summary>
            By assigning a <see cref="T:SisoDb.ICacheProvider"/> you get
            the possibility of preventing the query from
            hitting the database for certain queries.
            </summary>
        </member>
        <member name="P:SisoDb.ISisoDatabase.CachingIsEnabled">
            <summary>
            Get a value indicating if the Database has a <see cref="P:SisoDb.ISisoDatabase.CacheProvider"/>
            assigned.
            </summary>
        </member>
        <member name="P:SisoDb.ISisoDatabase.StructureSchemas">
            <summary>
            Cached Structure schemas, which holds information
            about members to index etc.
            </summary>
        </member>
        <member name="P:SisoDb.ISisoDatabase.StructureBuilders">
            <summary>
            Structure builders collection used to resolve a Structure builder to use when building structures for insert and updates.
            </summary>
        </member>
        <member name="P:SisoDb.ISisoDatabase.Serializer">
            <summary>
            The serializer used to handle Json.
            </summary>
        </member>
        <member name="T:SisoDb.ICache">
            <summary>
            A cache for a certain type of <see cref="T:PineCone.Structures.IStructure"/> identified
            by <see cref="P:PineCone.Structures.Schemas.IStructureSchema.Name"/>.
            </summary>
        </member>
        <member name="M:SisoDb.ICache.Clear">
            <summary>
            Clears all cache for the structure set.
            </summary>
        </member>
        <member name="M:SisoDb.ICache.Exists(PineCone.Structures.IStructureId)">
            <summary>
            Returns bool indicating if there is a structure for
            the passed structure id in the cache.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SisoDb.ICache.GetById``1(PineCone.Structures.IStructureId)">
            <summary>
            Returns either null or the structure matching the
            sent id.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SisoDb.ICache.GetByIds``1(PineCone.Structures.IStructureId[])">
            <summary>
            Returns a cached result set for all, none or subset of the passed ids.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:SisoDb.ICache.Put``1(PineCone.Structures.IStructureId,``0)">
            <summary>
            Called when an insert or update is performed against the <see cref="T:SisoDb.ISisoDatabase"/>.
            Should be used to update the cache.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="structureId"></param>
            <param name="structure"></param>
            <returns></returns>
            <remarks>Note! The structure being sent in should be returned by the cache.</remarks>
        </member>
        <member name="M:SisoDb.ICache.Put``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{PineCone.Structures.IStructureId,``0}})">
            <summary>
            Called when an insert or update is performed against the <see cref="T:SisoDb.ISisoDatabase"/>.
            Should be used to update the cache.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="items"></param>
            <returns></returns>
            <remarks>Note! The structures being sent in should be returned by the cache.</remarks>
        </member>
        <member name="M:SisoDb.ICache.Remove(PineCone.Structures.IStructureId)">
            <summary>
            Called when a structure is being deleted from the <see cref="T:SisoDb.ISisoDatabase"/>.
            Should be used to update the cache.
            </summary>
            <param name="structureId"></param>
        </member>
        <member name="M:SisoDb.ICache.Remove(System.Collections.Generic.IEnumerable{PineCone.Structures.IStructureId})">
            <summary>
            Called when multiple structures are being deleted from the <see cref="T:SisoDb.ISisoDatabase"/>.
            Should be used to update the cache.
            </summary>
            <param name="structureIds"></param>
        </member>
        <member name="P:SisoDb.ICache.StructureType">
            <summary>
            The Structure Type that this cache manages.
            </summary>
        </member>
        <member name="T:SisoDb.IDbProviderFactory">
            <summary>
            When targeting a Database oriented provider, e.g all providers extending <see cref="T:SisoDb.SisoDbDatabase"/>, the infrastructure
            could make use of this factory to ease the interaction with <see cref="T:SisoDb.SisoDbDatabase"/>.
            </summary>
        </member>
        <member name="F:SisoDb.BackgroundIndexing.Off">
            <summary>
            Default. Indexes are inserted along with structures and uniques.
            </summary>
        </member>
        <member name="F:SisoDb.BackgroundIndexing.On">
            <summary>
            Indexes are queued and processed in the background. This means
            that structures and uniques will be inserted directly, whilst
            indexes will be inserted later. There will be eventual concistency
            between them.
            </summary>
        </member>
        <member name="T:SisoDb.Resources.ExceptionMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.AutoSchemaBuilder_MissingIdMember">
            <summary>
              Looks up a localized string similar to The Item of type &apos;{0}&apos; has no Id member specified. A Guid or Int property named &apos;Id&apos; was expected..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.AutoSchemaBuilder_MissingIndexableMembers">
            <summary>
              Looks up a localized string similar to The Item of type &apos;{0}&apos; has no members that are indexable. There&apos;s no point in storing items that has nothing to index..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.AutoSchemaBuilder_UnsupportedIdAccessorType">
            <summary>
              Looks up a localized string similar to The id property: &apos;{0}&apos;; is not of suported type. Only Guid and Int is accepted..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.ConcurrencyException">
            <summary>
              Looks up a localized string similar to Can not update structure, since it has a Concurrency token member, with a value not equal to the one in store..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.ConcurrencyTokenIsOfWrongType">
            <summary>
              Looks up a localized string similar to The ConcurrencyToken member should be either: Guid, Int or Long..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.ConnectionInfo_BackgroundIndexingNotSupported">
            <summary>
              Looks up a localized string similar to Background indexing is not yet supported by provider &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.ConnectionInfo_MissingName">
            <summary>
              Looks up a localized string similar to The name of the database could not be extracted from the connection-info..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.ConnectionInfo_UnsupportedProviderSpecified">
            <summary>
              Looks up a localized string similar to Storageprovider &apos;{0}&apos; is unsupported. The storageprovider should be: &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.ConnectionString_MissingParts">
            <summary>
              Looks up a localized string similar to The connectionstring should have exactly two parts (&apos;{0}&apos; and &apos;{1}&apos;). Example: &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.ConnectionString_MissingPlainPart">
            <summary>
              Looks up a localized string similar to The connectionstring is missing the Plain-part, indicated by &apos;{0}&apos;. Example: &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.ConnectionString_MissingProviderKey">
            <summary>
              Looks up a localized string similar to The SisoDb-part is missing required key: &apos;provider&apos;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.ConnectionString_MissingSisoDbPart">
            <summary>
              Looks up a localized string similar to The connectionstring is missing the SisoDb-part, indicated by &apos;{0}&apos;. Example: &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.DbClient_Commit_NonTransactional">
            <summary>
              Looks up a localized string similar to You can not commit/flush a non transational DbClient..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.DbQueryGenerator_GenerateQueryReturningStrutureIds">
            <summary>
              Looks up a localized string similar to The query should only return StructureIds and then onle Where expressions are allowed. Take, Paging and Sorting etc is not allowed..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.ExpressionEvaluator_EvaluateMemberExpression_NotSupported">
            <summary>
              Looks up a localized string similar to Direct memberaccess of node: &apos;{0}&apos;; with with membertype: &apos;{1}&apos;; is not supported!.
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.GetCommand_SortingsAllreadyInitialized">
            <summary>
              Looks up a localized string similar to The Sortings has allready been initialized..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.IdAccessor_GetIdValue_InvalidLevel">
            <summary>
              Looks up a localized string similar to Id values must lie on the root object..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.IdAccessor_UnsupportedPropertyType">
            <summary>
              Looks up a localized string similar to The Property.PropertyType &apos;{0}&apos; is not supported by the IdAccessor..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.Index_IsMissingName">
            <summary>
              Looks up a localized string similar to An Index-instance must be provided with a name..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.InMemoryCacheProvider_Clear_failed">
            <summary>
              Looks up a localized string similar to Could not clear all structure set cache entries. See contained exceptions for more info..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.LambdaOperator_IsOrIsNot_NotSupported">
            <summary>
              Looks up a localized string similar to The operator type &apos;{0}&apos; can not be converted to &apos;IsNotNullOperatpr&apos; or &apos;NullOperator&apos;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.LambdaOperator_OperatorTypeIsNotSupported">
            <summary>
              Looks up a localized string similar to Operator &apos;{0}&apos; is not supported!.
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.LambdaParser_UnsupportedMethodCall">
             <summary>
               Looks up a localized string similar to Could not evaluate the method call: &apos;{0}&apos;.
            Specific supported method exists as extensionmethods and are prefixed with &apos;Qx&apos;. Import namespace &apos;SisoDb.Querying&apos; to enable them..
             </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.LambdaParser_VisitUnary_InvalidConvert">
            <summary>
              Looks up a localized string similar to Conversion of values in expression is only allowed for nullable valuetypes..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.LambdaParser_VisitUnary_NotSupported">
            <summary>
              Looks up a localized string similar to The unary operator &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.OrderByParser_UnsupportedMethodForSortingDirection">
            <summary>
              Looks up a localized string similar to The only supported methods for marking sortings are Asc() and Desc()..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.Property_Ctor_UniqueOnNonSimpleType">
            <summary>
              Looks up a localized string similar to You cant apply Unique on a member that is not of a simple type e.g. (int, string, bool) etc..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.ReadOnceQueryable_YieldingNotSupported">
            <summary>
              Looks up a localized string similar to ReadOnceQueryable doesn&apos;t support yielding result. Use matching ToList method instead..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.SisoDbFactory_UnknownStorageProvider">
            <summary>
              Looks up a localized string similar to The provided StorageProvider &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.SisoDbNotSupportedByProviderException">
            <summary>
              Looks up a localized string similar to The provider: &apos;{0}&apos; does not support operation: {1}..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.SqlDatabase_InitializeExisting_DbDoesNotExist">
            <summary>
              Looks up a localized string similar to The database &apos;{0}&apos; doesn&apos;t exist..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.SqlDbIndexesSchemaBuilder_GenerateSql">
            <summary>
              Looks up a localized string similar to Could not locate SQL for generating Structure-table for StructureId type: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.SqlDbStructureSchemaBuilder_GenerateSql">
            <summary>
              Looks up a localized string similar to Could not locate SQL for generating Structure-table for StructureId type: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.SqlDbUniquesSchemaBuilder_GenerateSql">
            <summary>
              Looks up a localized string similar to Could not locate SQL for generating Structure-table for StructureId type: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.SqlStructureSetUpdater_OldIdDoesNotExist">
            <summary>
              Looks up a localized string similar to No Id could be extracted from the old structure..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.Structure_DuplicateUniques">
            <summary>
              Looks up a localized string similar to Duplicate Unique-index found for &apos;{0}&apos;.\r\nStructureId: &apos;{1}&apos;;Name: &apos;{2}&apos;;Value: &apos;{3}&apos;;.
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.StructureBuilders_CreateForInsert">
            <summary>
              Looks up a localized string similar to Could not create StructureBuilder for Inserts and Id-type &apos;{0}&apos; for Schema &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.StructureIdFactory_MissingGuidValue">
            <summary>
              Looks up a localized string similar to When using Guids the Id-property of the entity must be assigned before structure is created..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.StructureIdFactory_MissingIdentityValue">
            <summary>
              Looks up a localized string similar to When using Identities the Id-property of the entity must be assigned before structure is created..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.StructureIdFactory_UnSupportedIdentityType">
            <summary>
              Looks up a localized string similar to The identity type: &apos;{0}&apos; is not supported..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.StructureIndex_ValueArgument_IncorrectType">
            <summary>
              Looks up a localized string similar to Only strings and valuetypes can be stored as indexes..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.StructureIndexesFactory_UniqueIndex_IsNull">
            <summary>
              Looks up a localized string similar to The Unique index &apos;{0}&apos;:&apos;{1}&apos; is evaluated to Null. This is not alowed..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.StructureSetUpdater_MissmatchInIdTypes">
            <summary>
              Looks up a localized string similar to Can not migrate structure set when Id type has changed..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.StructureSetUpdater_NewIdDoesNotExist">
            <summary>
              Looks up a localized string similar to Can not migrate structure set. No Id could be extracted from the new structure..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.StructureSetUpdater_NewIdDoesNotMatchOldId">
            <summary>
              Looks up a localized string similar to The Id &apos;{0}&apos; of the new structure does not match the Id of the old structure &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.StructureSetUpdater_TOld_TNew_SameType">
            <summary>
              Looks up a localized string similar to Migrate&lt;TOld, TNew&gt; should not be used for same types. Use Migrate&lt;T&gt; instead..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.TypeExtensions_ExtractGenericType">
            <summary>
              Looks up a localized string similar to Supported generic collections on model are: implementations of either IEnumerable&lt;T&gt; or IList&lt;T&gt;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.UniqueModesCantBeMapped">
            <summary>
              Looks up a localized string similar to The UniqueModes &apos;{0}&apos; is unknow and cant be mapped..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.WhereExpressionParser_NoMemberExpressions">
            <summary>
              Looks up a localized string similar to You can&apos;t only access a member in a query expression unless it&apos;s a bool. You need to compare it against something..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.WhereParser_QxEnumerables_OperatorNotSupported">
            <summary>
              Looks up a localized string similar to The operator &apos;{0}&apos; is not supported for Qx-methods on enumerables..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.WriteSession_NoItemExistsForUpdate">
            <summary>
              Looks up a localized string similar to There is no &apos;{0}&apos;-structure to update matching the sent Id &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:SisoDb.Resources.ExceptionMessages.WriteSession_UpdateMany_NewIdDoesNotMatchOldId">
            <summary>
              Looks up a localized string similar to The Id &apos;{0}&apos; of the new structure does not match the Id of the old structure &apos;{1}&apos;..
            </summary>
        </member>
        <member name="T:SisoDb.ISisoDatabaseFactory">
            <summary>
            Factory used to create an <see cref="T:SisoDb.ISisoDatabase"/> which
            is the starting point to consume SisoDb.
            </summary>
        </member>
        <member name="T:SisoDb.ICacheProvider">
            <summary>
            Defines a Cache provider that can be hooked in to
            a <see cref="T:SisoDb.ISisoDatabase"/>.
            </summary>
        </member>
        <member name="M:SisoDb.ICacheProvider.Clear">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="M:SisoDb.ICacheProvider.Handles(System.Type)">
            <summary>
            Indicates if the <paramref name="type"/> is
            supported or not by the cache provider.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:SisoDb.ICacheProvider.EnableFor(System.Type)">
            <summary>
            Enables caching for a certain structure type.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:SisoDb.ICacheProvider.DisableFor(System.Type)">
            <summary>
            Disables and removes caching for a certain structure type.
            </summary>
            <param name="type"></param>
        </member>
        <member name="P:SisoDb.ICacheProvider.Item(System.Type)">
            <summary>
            If <see cref="M:SisoDb.ICacheProvider.Handles(System.Type)"/> returns true for <paramref name="type"/>
            then this property should always return an instance of <see cref="T:SisoDb.ICache"/>.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:SisoDb.ICacheProvider.AutoEnable">
            <summary>
            Gets or Sets a value, determining if a cache should be
            created automatically for a type, when the cache is
            consumed for the first time.
            </summary>
        </member>
    </members>
</doc>
